plugins {
    id 'java'
    id 'application'
    id 'com.github.gmazzo.buildconfig' version '5.3.5'
}

group = project.group
version = project.version

buildConfig {
    buildConfigField(String, "HASH", "${execute("git rev-parse HEAD")}")
    buildConfigField(String, "BRANCH", "${execute("git branch --show-current")}")
    buildConfigField(String, "GROUP", project.group.toString())
    buildConfigField(String, "VERSION", project.version.toString())
    buildConfigField(String, "ENVIRONMENT", project.environment.toString())
    buildConfigField(String, "BUILD", project.build_number.toString())
    buildConfigField(String, "BUILD_TIME", "${new Date(System.currentTimeMillis()).format("MM/dd/yyyy HH:mm")}")

    packageName project.group
    useJavaOutput()
    generateAtSync = true
}

sourceSets.main.java.srcDirs += "build/gen/buildconfig/src/main"

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-nop', version: '2.0.17'
    implementation group: 'net.dv8tion', name: 'JDA', version: project.jda_version
}

jar {
    from {
        configurations.library.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(JavaCompile).configureEach {
    dependsOn(generateBuildConfig)
}

def execute(String cmd) {
    try {
        def stdout = new ByteArrayOutputStream()

        exec {
            commandLine cmd.split(" ")
            standardOutput = stdout
        }

        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}